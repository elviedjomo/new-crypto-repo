# version: 0.2

# phases:
#   pre_build:
#     commands:
#       - echo "Logging in to Amazon ECR..."
#       - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 503561459342.dkr.ecr.us-east-1.amazonaws.com
#       - REPOSITORY_URI=503561459342.dkr.ecr.us-east-1.amazonaws.com/crypto-project
#       - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - IMAGE_TAG=${COMMIT_HASH:=latest}
#   build:
#     commands:
#       - echo "Building the Docker image..."
#       - docker build -t $REPOSITORY_URI:latest .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo "Pushing the Docker image..."
#       - docker push $REPOSITORY_URI:latest
#       - docker push $REPOSITORY_URI:$IMAGE_TAG

#       - echo "Setting IMAGE_URI variable..."
#       - export IMAGE_URI="$REPOSITORY_URI:$IMAGE_TAG"

#        # âœ… Use jq for safer JSON creation
#       - echo "Creating JSON output file..."
#       - echo '{}' | jq --arg img "$IMAGE_URI" '.imageURI = $img' > imageDetail.json
#       - echo "Verifying JSON output before uploading..."
#       - cat imageDetail.json

#       - echo "Uploading imageDetail.json to S3..."
#       - aws s3 cp imageDetail.json s3://crypto-app-artifact-bucket/crypto-app-build/imageDetail.json
      
# artifacts:
#   files:
#     - imageDetail.json
#   discard-paths: yes
version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-1
    ECR_ACCOUNT_ID: "503561459342"
    ECR_REPOSITORY: "crypto-project"
    # Optional: set CONTAINER_NAME to also emit imagedefinitions.json for ECS Deploy actions
    # CONTAINER_NAME: "crypto-app"
  exported-variables:
    - IMAGE_URI
    - IMAGE_TAG

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - set -Eeuo pipefail
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region "$AWS_DEFAULT_REGION" \
        | docker login --username AWS --password-stdin "${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - IMAGE_URI="${ECR_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY}"
      - echo "IMAGE_URI=$IMAGE_URI"

  pre_build:
    commands:
      - COMMIT_HASH=$(echo "${CODEBUILD_RESOLVED_SOURCE_VERSION:-}" | cut -c1-7 || true)
      - IMAGE_TAG="${COMMIT_HASH:-build-${CODEBUILD_BUILD_NUMBER}}"
      - echo "IMAGE_TAG=$IMAGE_TAG"

  build:
    commands:
      - echo "Building Docker image: $IMAGE_URI:$IMAGE_TAG"
      - docker build -t "$IMAGE_URI:$IMAGE_TAG" -t "$IMAGE_URI:latest" .

  post_build:
    commands:
      - echo "Pushing Docker images..."
      - docker push "$IMAGE_URI:$IMAGE_TAG"
      - docker push "$IMAGE_URI:latest"

      # Emit standard artifacts for downstream stages/actions
      - echo "Creating imageDetail.json (for CFN/custom deploys)..."
      - printf '{"ImageURI":"%s"}' "$IMAGE_URI:$IMAGE_TAG" > imageDetail.json

      - |
        if [ -n "${CONTAINER_NAME:-}" ]; then
          echo "Creating imagedefinitions.json (for ECS Deploy action)..."
          printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$IMAGE_URI:$IMAGE_TAG" > imagedefinitions.json
        fi

artifacts:
  files:
    - imageDetail.json
    - imagedefinitions.json
  discard-paths: yes
